{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Beat Rate CRUD",
    "description": "Beat Rate Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Beats",
      "description": "API for beats in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/users/add": {
      "post": {
        "tags": ["Users"],
        "summary": "Create new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Find user in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/find": {
      "parameters": [
        {
          "name": "searchReq",
          "in": "body",
          "required": true,
          "description": "Username of user that we want to find",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Users"],
        "summary": "Find user in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/{id}/update": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to update",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "summary": "Update user from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/{id}/delete": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to delete",
          "type": "string"
        }
      ],
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/beats": {
      "get": {
        "tags": ["Beats"],
        "summary": "Get all beats from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/beats"
            }
          }
        }
      }
    },
    "/api/beats/add": {
      "post": {
        "tags": ["Beats"],
        "summary": "Create new beat",
        "parameters": [
          {
            "name": "beat",
            "in": "body",
            "description": "Beat that we want to add",
            "schema": {
              "$ref": "#/definitions/Beat"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Beat"
            }
          }
        }
      }
    },
    "/api/beats/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the beat that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Beats"],
        "summary": "Find beat in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Beat"
            }
          }
        }
      }
    },
    "/api/beats/find": {
      "parameters": [
        {
          "name": "searchReq",
          "in": "body",
          "required": true,
          "description": "Title of the beat that we want to find",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Beats"],
        "summary": "Find beat in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Beat"
            }
          }
        }
      }
    },
    "/api/beats/{id}/update": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the beat that we want to update",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Beats"],
        "parameters": [
          {
            "name": "beat",
            "in": "body",
            "description": "Beat with new values of properties",
            "schema": {
              "$ref": "#/definitions/Beat"
            }
          }
        ],
        "summary": "Update beat from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Beat"
            }
          }
        }
      }
    },
    "/api/beats/{id}/delete": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the beat that we want to delete",
          "type": "string"
        }
      ],
      "delete": {
        "tags": ["Beats"],
        "summary": "Delete beat from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Beat"
            }
          }
        }
      }
    }
    
  },
  "definitions": {
    "User": {
      "required": ["email", "_id"],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Beat": {
      "required": ["_id"],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "music": {
          "type": "string"
        }
        
      }
    },
    "Beats": {
      "type": "array",
      "$ref": "#/definitions/Beat"
    }
    
  }
}
